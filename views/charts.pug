extends layout

block content
  script.
    // data from db queries
    const chartData = {
      BurnedDay: !{JSON.stringify(burnedDay)},
      BurnedWeek: !{JSON.stringify(burnedWeek)},
      BurnedMonth: !{JSON.stringify(burnedMonth)},
      TxDay: !{JSON.stringify(txsDay)},
      TxWeek: !{JSON.stringify(txsWeek)},
      TxMonth: !{JSON.stringify(txsMonth)},
      DifficultyWeek: !{JSON.stringify(difficultyWeek)},
      DifficultyMonth: !{JSON.stringify(difficultyMonth)},
      DifficultyQuarter: !{JSON.stringify(difficultyQuarter)},
      DifficultyYear: !{JSON.stringify(difficultyYear)},
      MiningDistDay: !{JSON.stringify(miningDistDay)},
      MiningDistWeek: !{JSON.stringify(miningDistWeek)}
    }
    
    // holds the AJAX query object; prevents multiple queries at one time
    // TODO: implement Ajax functionality to help reduce initial data load
    // var chartGetDataAjax = null;
    
    // plot objects
    const plots = {
      plotChartBurnedDay: null,
      plotChartBurnedWeek: null,
      plotChartBurnedMonth: null,
      plotChartTxDay: null,
      plotChartTxWeek: null,
      plotChartTxMonth: null,
      plotChartDifficultyWeek: null,
      plotChartDifficultyMonth: null,
      plotChartDifficultyQuarter: null,
      plotChartDifficultyYear: null,
      plotChartMiningDistDay: null,
      plotChartMiningDistWeek: null
    }
      
    // pie chart legend location based on screen size
    const pieLegendLocation = $(window).width() <= 768 ? 's' : 'e';
    
    // plot config objects
    var plotConfigs = {
      BurnedDay: {
        title: "!{parseInt(burnedDay_total).toLocaleString('en')} XPI Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickInterval:'6 hour',
            tickOptions:{
              formatString:'%a %#H:%M',
            }
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
      },
      BurnedWeek: {
        title: "!{parseInt(burnedWeek_total).toLocaleString('en')} XPI Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickInterval:'24 hour',
            tickOptions:{
              formatString:'%m/%d',
            },
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
      },
      BurnedMonth: {
        title: "!{parseInt(burnedMonth_total).toLocaleString('en')} XPI Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickInterval:'4 day',
            tickOptions:{
              formatString:'%m/%d',
            },
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
      },
      TxDay: {
        title: "!{parseInt(txsDay_count).toLocaleString('en')} Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickInterval:'6 hour',
            tickOptions:{
              formatString:'%a %#H:%M',
            }
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
      },
      TxWeek:{
        title: "!{parseInt(txsWeek_count).toLocaleString('en')} Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d',
            },
            tickInterval:'24 hour',
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
        
      },
      TxMonth: {
        title: "!{parseInt(txsMonth_count).toLocaleString('en')} Total",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d',
            },
            tickInterval:'4 day',
          },
          yaxis:{
            show: true,
            min: 0
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
        
      },
      DifficultyWeek: {
        title: "!{parseFloat(((difficultyWeek[difficultyWeek.length - 1][1] - difficultyWeek[0][1]) / difficultyWeek[0][1]) * 100).toLocaleString('en')}% Change",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d'
            },
            tickInterval:'24 hour',
          },
          yaxis:{
            show: true,
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]
        
      },
      DifficultyMonth: {
        title: "!{parseFloat(((difficultyMonth[difficultyMonth.length - 1][1] - difficultyMonth[0][1]) / difficultyMonth[0][1]) * 100).toLocaleString('en')}% Change",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d'
            },
            tickInterval:'4 day',
          },
          yaxis:{
            show: true,
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]  
      },
      DifficultyQuarter: {
        title: "!{parseFloat(((difficultyQuarter[difficultyQuarter.length - 1][1] - difficultyQuarter[0][1]) / difficultyQuarter[0][1]) * 100).toLocaleString('en')}% Change",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d'
            },
            tickInterval:'14 day',
          },
          yaxis:{
            show: true,
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]  
      },
      DifficultyYear: {
        title: "!{parseFloat(((difficultyYear[difficultyYear.length - 1][1] - difficultyYear[0][1]) / difficultyYear[0][1]) * 100).toLocaleString('en')}% Change",
        highlighter:{
          show: true
        },
        axes:{
          xaxis:{
            show: true,
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{
              formatString:'%m/%d'
            },
            tickInterval:'2 month',
          },
          yaxis:{
            show: true,
          }
        },
        series:[{
          rendererOptions:{
            //smooth: true,
          },
          lineWidth: 1.5,
          showMarker: false,
        }]  
      },
      MiningDistDay: {
        title: "!{totalMinersDay} Miners Total",
        series: [{
          renderer: $.jqplot.PieRenderer,
          rendererOptions:{
            sliceMargin: 3,
            padding: 26,
            showDataLabels: true,
            dataLabels: 'percent',
            dataLabelPositionFactor: 1.07,
            dataLabelCenterOn: false,
            startAngle: -90,
            shadowOffset: 1
          }
        }],
        legend:{
          show: true,
          placement: 'outside',
          location: pieLegendLocation,
          //renderer: $.jqplot.EnhancedPieLegendRenderer,
          rendererOptions:{
            numberRows: 15,
            numberColumns: 1
            //seriesToggle: false,
            //toolTips: miningDistDay.map((a) => a[1] + ' blocks')
          },
          fontSize: 12
        }
      },
      MiningDistWeek: {
        title: "!{totalMinersWeek} Miners Total",
        series: [{
          renderer: $.jqplot.PieRenderer,
          rendererOptions:{
            sliceMargin: 3,
            padding: 26,
            showDataLabels: true,
            dataLabels: 'percent',
            dataLabelPositionFactor: 1.07,
            dataLabelCenterOn: false,
            startAngle: -90,
            shadowOffset: 1
          }
        }],
        legend:{
          show: true,
          placement: 'outside',
          location: pieLegendLocation,
          //renderer: $.jqplot.EnhancedPieLegendRenderer,
          rendererOptions:{
            numberRows: 15,
            numberColumns: 1
            //seriesToggle: false,
            //toolTips: miningDistMonth.map((a) => a[1] + ' blocks')
          },
          fontSize: 12
        },
      }
    }
    
    $(document).ready(() => {
      // register jQuery event handler for changing between tabs
      $('.tabpanel .nav-link').on('click', function() {
        const clicked = $(this).attr('aria-controls').replace('tab', '');
        const chart = 'chart' + clicked;
        const plot = 'plotChart' + clicked;
        const plotConfig = 'plotConfig' + clicked;
        setTimeout(function() {
          var tabMiningDist = $('.tab-content .active div[id*="chartMiningDist"]').parent();
          if(plot.includes('MiningDist')) {
            if ($(window).width() <= 768) {
              plotConfigs[clicked].legend.location = 's';
              tabMiningDist.css('height', '700px');
            } else {
              plotConfigs[clicked].legend.location = 'e';
              tabMiningDist.css('height', '');
            }
          }
          if(plots[plot] !== null) {
            plots[plot].destroy();
          }
          plots[plot] = $.jqplot(
            chart,
            [chartData[clicked]],
            plotConfigs[clicked]
          );
          plots[plot].replot({ resetAxes: false });
        }, 1);
      });
      // Initial plot rendering
      plots.plotChartTxDay = $.jqplot(
        'chartTxDay',
        [chartData.TxDay],
        plotConfigs.TxDay
      );
      
      plots.plotChartDifficultyWeek = $.jqplot(
        'chartDifficultyWeek',
        [chartData.DifficultyWeek],
        plotConfigs.DifficultyWeek
      );
      //plotChartDifficultyMonth = $.jqplot('chartDifficultyMonth', [difficultyMonth], plotConfigDifficultyMonth);
      
      if($(window).width() <= 768) {
        $('#tabMiningDistDay').css('height', '700px');
        $('#tabMiningDistWeek').css('height', '700px');
      }
      
      plots.plotChartMiningDistDay = $.jqplot(
        'chartMiningDistDay',
        [chartData.MiningDistDay],
        plotConfigs.MiningDistDay)
      ;
      // plots['plotChartMiningDistWeek'] = $.jqplot('chartMiningDistWeek', [chartData['MiningDistWeek']], plotConfigs['MiningDistWeek'];
      
      plots.plotChartBurnedDay = $.jqplot(
        'chartBurnedDay',
        [chartData.BurnedDay],
        plotConfigs.BurnedDay
      );
    });
    
    $(window).resize(function () {
      // for pie chart legend location
      var tabMiningDist = $('.tab-content .active div[id*="chartMiningDist"]').parent();
      // graceful resizing
      $('.tab-content .active div[id*="chart"]').each(function(index) {
        var div_id = $(this).attr('id');
        var plot = "plotChart" + div_id.replace('chart', '');
        plots[plot].replot({resetAxes: false});
        if(plot.includes('MiningDist')) {
          if ($(window).width() <= 768) {
            plots[plot].legend.location = 's';
            tabMiningDist.css('height', '700px');
          } else {
            plots[plot].legend.location = 'e';
            tabMiningDist.css('height', '');
          }
        }
      });
    });
  
  
  //code Number of TX last 24h: #{txs_day.length}
  //code #{JSON.stringify(txsDay)}
  .col-md-12
    .row
      .col-md-6
        h4 Non-coinbase Transactions
        .tabpanel
          ul.nav.nav-tabs(role='tablist')
            li.nav-item(role='presentation')
              a.nav-link.active(href='#tabTxDay', aria-controls='tabTxDay', role='tab', data-toggle='tab') Day
            li.nav-item(role='presentation')
              a.nav-link(href='#tabTxWeek', aria-controls='tabTxWeek', role='tab', data-toggle='tab') Week
            li.nav-item(role='presentation')
              a.nav-link(href='#tabTxMonth', aria-controls='tabTxMonth', role='tab', data-toggle='tab') Month
        .tab-content
          #tabTxDay.tab-pane.active
            div#chartTxDay
          #tabTxWeek.tab-pane
            div#chartTxWeek
          #tabTxMonth.tab-pane
            div#chartTxMonth
        hr

      .col-md-6
        h4 Burned XPI - 
          code OP_RETURN
        .tabpanel
          ul.nav.nav-tabs(role='tablist')
            li.nav-item(role='presentation')
              a.nav-link.active(href='#tabBurnedDay', aria-controls='tabBurnedDay', role='tab', data-toggle='tab') Day
            li.nav-item(role='presentation')
              a.nav-link(href='#tabBurnedWeek', aria-controls='tabBurnedWeek', role='tab', data-toggle='tab') Week
            li.nav-item(role='presentation')
              a.nav-link(href='#tabBurnedMonth', aria-controls='tabBurnedMonth', role='tab', data-toggle='tab') Month
        .tab-content
          #tabBurnedDay.tab-pane.active
            div#chartBurnedDay
          #tabBurnedWeek.tab-pane
            div#chartBurnedWeek
          #tabBurnedMonth.tab-pane
            div#chartBurnedMonth
        hr

  .col-md-12
    .row
      .col-md-6
        h4 Block Difficulty
        .tabpanel
          ul.nav.nav-tabs(role='tablist')
            li.nav-item(role='presentation')
              a.nav-link.active(href='#tabDifficultyWeek', aria-controls='tabDifficultyWeek', role='tab', data-toggle='tab') Week
            li.nav-item(role='presentation')
              a.nav-link(href='#tabDifficultyMonth', aria-controls='tabDifficultyMonth', role='tab', data-toggle='tab') Month
            li.nav-item(role='presentation')
              a.nav-link(href='#tabDifficultyQuarter', aria-controls='tabDifficultyQuarter', role='tab', data-toggle='tab') Quarter
            li.nav-item(role='presentation')
              a.nav-link(href='#tabDifficultyYear', aria-controls='tabDifficultyYear', role='tab', data-toggle='tab') Year
        .tab-content
          #tabDifficultyWeek.tab-pane.active
            div#chartDifficultyWeek
          #tabDifficultyMonth.tab-pane
            div#chartDifficultyMonth
          #tabDifficultyQuarter.tab-pane
            div#chartDifficultyQuarter
          #tabDifficultyYear.tab-pane
            div#chartDifficultyYear
        hr
      .col-md-6 
        hr

  .col-md-12
    .row
      .col-md-6
        h4 Block Distribution
        .tabpanel
          ul.nav.nav-tabs(role='tablist')
            li.nav-item(role='presentation')
              a.nav-link.active(href='#tabMiningDistDay', aria-controls='tabMiningDistDay', role='tab', data-toggle='tab') Day
            li.nav-item(role='presentation')
              a.nav-link(href='#tabMiningDistWeek', aria-controls='tabMiningDistWeek', role='tab', data-toggle='tab') Week
        .tab-content
          #tabMiningDistDay.tab-pane.active
            div#chartMiningDistDay(style='height:350px;')
          #tabMiningDistWeek.tab-pane
            div#chartMiningDistWeek(style='height:350px;')
        hr
